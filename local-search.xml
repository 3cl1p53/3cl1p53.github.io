<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Proxychains</title>
    <link href="/2020/10/10/010-proxychains/"/>
    <url>/2020/10/10/010-proxychains/</url>
    
    <content type="html"><![CDATA[<p>Proxychains使用心得</p><a id="more"></a><h2 id="0x01-下载安装"><a href="#0x01-下载安装" class="headerlink" title="0x01 下载安装"></a>0x01 下载安装</h2><p>Kali Linux中自带这个工具</p><details><summary>官方地址：https://github.com/rofl0r/proxychains-ng</summary><pre><code class="hljs bash"><span class="hljs-comment"># needs a working C compiler, preferably gcc</span>./configure --prefix=/usr --sysconfdir=/etcmake[optional] sudo make install[optional] sudo make install-config (installs proxychains.conf)</code></pre>if you dont install, you can use proxychains from the build directory<p>like this: ./proxychains4 -f src/proxychains.conf telnet google.com 80</p></details><h2 id="0x02-配置"><a href="#0x02-配置" class="headerlink" title="0x02 配置"></a>0x02 配置</h2><h3 id="0x02-1-配置文件生效顺序"><a href="#0x02-1-配置文件生效顺序" class="headerlink" title="0x02.1 配置文件生效顺序"></a>0x02.1 配置文件生效顺序</h3><ol><li><code>-f proxychains.conf</code></li><li><code>./proxychains.conf</code></li><li><code>$(HOME)/.proxychains/proxychains.conf</code></li><li><code>$(sysconfdir)/proxychains.conf</code> | like <code>/etc/proxychains.conf</code></li></ol><h3 id="0x02-2-三种代理模式"><a href="#0x02-2-三种代理模式" class="headerlink" title="0x02.2 三种代理模式"></a>0x02.2 三种代理模式</h3><p><img src="/img/blog_imgs/010-proxychains/001.png"></img></p><h3 id="0x02-3-ProxyList配置"><a href="#0x02-3-ProxyList配置" class="headerlink" title="0x02.3 ProxyList配置"></a>0x02.3 ProxyList配置</h3><p><img src="/img/blog_imgs/010-proxychains/002.png"></img></p><h2 id="0x03-使用"><a href="#0x03-使用" class="headerlink" title="0x03 使用"></a>0x03 使用</h2><pre><code class="hljs bash"><span class="hljs-comment"># Common usage</span>proxychains sqlmap -u <span class="hljs-string">&quot;xxx.com&quot;</span>proxychains telnet xxx.comproxychains -f proxychains-other.conf telnet xxx.com</code></pre><h2 id="0x04-代理获取"><a href="#0x04-代理获取" class="headerlink" title="0x04 代理获取"></a>0x04 代理获取</h2><ul><li>find proxies by Baidu &amp; Google</li><li><a href="https://www.kuaidaili.com/free/">https://www.kuaidaili.com/free/</a></li><li><a href="https://proxy-list.org/english/index.php">https://proxy-list.org/english/index.php</a></li></ul><h2 id="0x05-Python自动化添加代理"><a href="#0x05-Python自动化添加代理" class="headerlink" title="0x05 Python自动化添加代理"></a>0x05 Python自动化添加代理</h2><p>未完待续</p>]]></content>
    
    
    <categories>
      
      <category>Tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQL Injection</title>
    <link href="/2020/09/30/009-sql-injection/"/>
    <url>/2020/09/30/009-sql-injection/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Cybersecurity</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vulnerability</tag>
      
      <tag>SQL Injection</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web安全漏洞原理学习</title>
    <link href="/2020/09/28/008-Web-Vulnerability-Learning/"/>
    <url>/2020/09/28/008-Web-Vulnerability-Learning/</url>
    
    <content type="html"><![CDATA[<p>｜SQL注入｜XSS｜命令执行｜CSRF｜</p><a id="more"></a><h2 id="0x01-SQL-Injection"><a href="#0x01-SQL-Injection" class="headerlink" title="0x01 SQL Injection"></a>0x01 <a href="/2020/09/30/009-sql-injection/">SQL Injection</a></h2><p>通过在用户可控参数中注入 SQL 语法，破坏原有 SQL 结构，最终达到欺骗服务器执行恶意的SQL命令。  其成因可以归结为以下两个原因叠加造成的：</p><ol><li>程序编写者在处理应用程序和数据库交互时，使用字符串拼接的方式构造 SQL 语句</li><li>未对用户可控参数进行足够的过滤便将参数内容拼接进入到 SQL 语句中</li></ol><h2 id="0x02-XSS"><a href="#0x02-XSS" class="headerlink" title="0x02 XSS"></a>0x02 XSS</h2><h2 id="0x03-命令执行"><a href="#0x03-命令执行" class="headerlink" title="0x03 命令执行"></a>0x03 命令执行</h2><h2 id="0x04-CSRF"><a href="#0x04-CSRF" class="headerlink" title="0x04 CSRF"></a>0x04 CSRF</h2>]]></content>
    
    
    <categories>
      
      <category>Cybersecurity</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vulnerability</tag>
      
      <tag>Web</tag>
      
      <tag>Learning</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Sqlmap</title>
    <link href="/2020/09/26/007-sqlmap/"/>
    <url>/2020/09/26/007-sqlmap/</url>
    
    <content type="html"><![CDATA[<p>【参考文档】<a href="https://github.com/sqlmapproject/sqlmap/wiki/Usage">https://github.com/sqlmapproject/sqlmap/wiki/Usage</a></p><a id="more"></a><h2 id="0x01-用法参考"><a href="#0x01-用法参考" class="headerlink" title="0x01 用法参考"></a>0x01 用法参考</h2><pre><code class="hljs"><span class="hljs-attribute">Usage</span>: python sqlmap.py [options]<span class="hljs-attribute">Options:</span>  -h, --help            Show basic help message and exit  -hh                   Show advanced help message and exit  --version             Show program&#x27;s version number and exit  -v VERBOSE            Verbosity level: 0-6 (default 1)  Target:    At least one of these options has to be provided to define the    target(s)    -d DIRECT           Connection string for direct database connection    -u URL, --url=URL   Target URL (e.g. &quot;http://www.site.com/vuln.php?id=1&quot;)    -l LOGFILE          Parse target(s) from Burp or WebScarab proxy log file    -m BULKFILE         Scan multiple targets given in a textual file    -r REQUESTFILE      Load HTTP request from a file    -g GOOGLEDORK       Process Google dork results as target URLs    -c CONFIGFILE       Load options from a configuration INI file  Request:    These options can be used to specify how to connect to the target URL    --method=METHOD     Force usage of given HTTP method (e.g. PUT)    --data=DATA         Data string to be sent through POST (e.g. &quot;id=1&quot;)    --param-del=PARA..  Character used for splitting parameter values (e.g. &amp;)    --cookie=COOKIE     HTTP Cookie header value (e.g. &quot;PHPSESSID=a8d127e..&quot;)    --cookie-del=COO..  Character used for splitting cookie values (e.g. ;)    --load-cookies=L..  File containing cookies in Netscape/wget format    --drop-set-cookie   Ignore Set-Cookie header from response    --user-agent=AGENT  HTTP User-Agent header value    --random-agent      Use randomly selected HTTP User-Agent header value    --host=HOST         HTTP Host header value    --referer=REFERER   HTTP Referer header value    -H HEADER, --hea..  Extra header (e.g. &quot;X-Forwarded-For: 127.0.0.1&quot;)    --headers=HEADERS   Extra headers (e.g. &quot;Accept-Language: fr\nETag: 123&quot;)    --auth-type=AUTH..  HTTP authentication type (Basic, Digest, NTLM or PKI)    --auth-cred=AUTH..  HTTP authentication credentials (name:password)    --auth-file=AUTH..  HTTP authentication PEM cert/private key file    --ignore-code=IG..  Ignore (problematic) HTTP error code (e.g. 401)    --ignore-proxy      Ignore system default proxy settings    --ignore-redirects  Ignore redirection attempts    --ignore-timeouts   Ignore connection timeouts    --proxy=PROXY       Use a proxy to connect to the target URL    --proxy-cred=PRO..  Proxy authentication credentials (name:password)    --proxy-file=PRO..  Load proxy list from a file    --tor               Use Tor anonymity network    --tor-port=TORPORT  Set Tor proxy port other than default    --tor-type=TORTYPE  Set Tor proxy type (HTTP, SOCKS4 or SOCKS5 (default))    --check-tor         Check to see if Tor is used properly    --delay=DELAY       Delay in seconds between each HTTP request    --timeout=TIMEOUT   Seconds to wait before timeout connection (default 30)    --retries=RETRIES   Retries when the connection timeouts (default 3)    --randomize=RPARAM  Randomly change value for given parameter(s)    --safe-url=SAFEURL  URL address to visit frequently during testing    --safe-post=SAFE..  POST data to send to a safe URL    --safe-req=SAFER..  Load safe HTTP request from a file    --safe-freq=SAFE..  Test requests between two visits to a given safe URL    --skip-urlencode    Skip URL encoding of payload data    --csrf-token=CSR..  Parameter used to hold anti-CSRF token    --csrf-url=CSRFURL  URL address to visit for extraction of anti-CSRF token    --force-ssl         Force usage of SSL/HTTPS    --hpp               Use HTTP parameter pollution method    --eval=EVALCODE     Evaluate provided Python code before the request (e.g.                        &quot;import hashlib;id2=hashlib.md5(id).hexdigest()&quot;)  Optimization:    These options can be used to optimize the performance of sqlmap    -o                  Turn on all optimization switches    --predict-output    Predict common queries output    --keep-alive        Use persistent HTTP(s) connections    --null-connection   Retrieve page length without actual HTTP response body    --threads=THREADS   Max number of concurrent HTTP(s) requests (default 1)  Injection:    These options can be used to specify which parameters to test for,    provide custom injection payloads and optional tampering scripts    -p TESTPARAMETER    Testable parameter(s)    --skip=SKIP         Skip testing for given parameter(s)    --skip-static       Skip testing parameters that not appear to be dynamic    --param-exclude=..  Regexp to exclude parameters from testing (e.g. &quot;ses&quot;)    --dbms=DBMS         Force back-end DBMS to provided value    --dbms-cred=DBMS..  DBMS authentication credentials (user:password)    --os=OS             Force back-end DBMS operating system to provided value    --invalid-bignum    Use big numbers for invalidating values    --invalid-logical   Use logical operations for invalidating values    --invalid-string    Use random strings for invalidating values    --no-cast           Turn off payload casting mechanism    --no-escape         Turn off string escaping mechanism    --prefix=PREFIX     Injection payload prefix string    --suffix=SUFFIX     Injection payload suffix string    --tamper=TAMPER     Use given script(s) for tampering injection data  Detection:    These options can be used to customize the detection phase    --level=LEVEL       Level of tests to perform (1-5, default 1)    --risk=RISK         Risk of tests to perform (1-3, default 1)    --string=STRING     String to match when query is evaluated to True    --not-string=NOT..  String to match when query is evaluated to False    --regexp=REGEXP     Regexp to match when query is evaluated to True    --code=CODE         HTTP code to match when query is evaluated to True    --text-only         Compare pages based only on the textual content    --titles            Compare pages based only on their titles  Techniques:    These options can be used to tweak testing of specific SQL injection    techniques    --technique=TECH    SQL injection techniques to use (default &quot;BEUSTQ&quot;)    --time-sec=TIMESEC  Seconds to delay the DBMS response (default 5)    --union-cols=UCOLS  Range of columns to test for UNION query SQL injection    --union-char=UCHAR  Character to use for bruteforcing number of columns    --union-from=UFROM  Table to use in FROM part of UNION query SQL injection    --dns-domain=DNS..  Domain name used for DNS exfiltration attack    --second-url=SEC..  Resulting page URL searched for second-order response    --second-req=SEC..  Load second-order HTTP request from file  Fingerprint:    -f, --fingerprint   Perform an extensive DBMS version fingerprint  Enumeration:    These options can be used to enumerate the back-end database    management system information, structure and data contained in the    tables. Moreover you can run your own SQL statements    -a, --all           Retrieve everything    -b, --banner        Retrieve DBMS banner    --current-user      Retrieve DBMS current user    --current-db        Retrieve DBMS current database    --hostname          Retrieve DBMS server hostname    --is-dba            Detect if the DBMS current user is DBA    --users             Enumerate DBMS users    --passwords         Enumerate DBMS users password hashes    --privileges        Enumerate DBMS users privileges    --roles             Enumerate DBMS users roles    --dbs               Enumerate DBMS databases    --tables            Enumerate DBMS database tables    --columns           Enumerate DBMS database table columns    --schema            Enumerate DBMS schema    --count             Retrieve number of entries for table(s)    --dump              Dump DBMS database table entries    --dump-all          Dump all DBMS databases tables entries    --search            Search column(s), table(s) and/or database name(s)    --comments          Check for DBMS comments during enumeration    -D DB               DBMS database to enumerate    -T TBL              DBMS database table(s) to enumerate    -C COL              DBMS database table column(s) to enumerate    -X EXCLUDE          DBMS database identifier(s) to not enumerate    -U USER             DBMS user to enumerate    --exclude-sysdbs    Exclude DBMS system databases when enumerating tables    --pivot-column=P..  Pivot column name    --where=DUMPWHERE   Use WHERE condition while table dumping    --start=LIMITSTART  First dump table entry to retrieve    --stop=LIMITSTOP    Last dump table entry to retrieve    --first=FIRSTCHAR   First query output word character to retrieve    --last=LASTCHAR     Last query output word character to retrieve    --sql-query=QUERY   SQL statement to be executed    --sql-shell         Prompt for an interactive SQL shell    --sql-file=SQLFILE  Execute SQL statements from given file(s)  Brute force:    These options can be used to run brute force checks    --common-tables     Check existence of common tables    --common-columns    Check existence of common columns  User-defined function injection:    These options can be used to create custom user-defined functions    --udf-inject        Inject custom user-defined functions    --shared-lib=SHLIB  Local path of the shared library  File system access:    These options can be used to access the back-end database management    system underlying file system    --file-read=FILE..  Read a file from the back-end DBMS file system    --file-write=FIL..  Write a local file on the back-end DBMS file system    --file-dest=FILE..  Back-end DBMS absolute filepath to write to  Operating system access:    These options can be used to access the back-end database management    system underlying operating system    --os-cmd=OSCMD      Execute an operating system command    --os-shell          Prompt for an interactive operating system shell    --os-pwn            Prompt for an OOB shell, Meterpreter or VNC    --os-smbrelay       One click prompt for an OOB shell, Meterpreter or VNC    --os-bof            Stored procedure buffer overflow exploitation    --priv-esc          Database process user privilege escalation    --msf-path=MSFPATH  Local path where Metasploit Framework is installed    --tmp-path=TMPPATH  Remote absolute path of temporary files directory  Windows registry access:    These options can be used to access the back-end database management    system Windows registry    --reg-read          Read a Windows registry key value    --reg-add           Write a Windows registry key value data    --reg-del           Delete a Windows registry key value    --reg-key=REGKEY    Windows registry key    --reg-value=REGVAL  Windows registry key value    --reg-data=REGDATA  Windows registry key value data    --reg-type=REGTYPE  Windows registry key value type  General:    These options can be used to set some general working parameters    -s SESSIONFILE      Load session from a stored (.sqlite) file    -t TRAFFICFILE      Log all HTTP traffic into a textual file    --answers=ANSWERS   Set predefined answers (e.g. &quot;quit=N,follow=N&quot;)    --base64=BASE64P..  Parameter(s) containing Base64 encoded data    --batch             Never ask for user input, use the default behavior    --binary-fields=..  Result fields having binary values (e.g. &quot;digest&quot;)    --check-internet    Check Internet connection before assessing the target    --crawl=CRAWLDEPTH  Crawl the website starting from the target URL    --crawl-exclude=..  Regexp to exclude pages from crawling (e.g. &quot;logout&quot;)    --csv-del=CSVDEL    Delimiting character used in CSV output (default &quot;,&quot;)    --charset=CHARSET   Blind SQL injection charset (e.g. &quot;0123456789abcdef&quot;)    --dump-format=DU..  Format of dumped data (CSV (default), HTML or SQLITE)    --encoding=ENCOD..  Character encoding used for data retrieval (e.g. GBK)    --eta               Display for each output the estimated time of arrival    --flush-session     Flush session files for current target    --forms             Parse and test forms on target URL    --fresh-queries     Ignore query results stored in session file    --har=HARFILE       Log all HTTP traffic into a HAR file    --hex               Use hex conversion during data retrieval    --output-dir=OUT..  Custom output directory path    --parse-errors      Parse and display DBMS error messages from responses    --preprocess=PRE..  Use given script(s) for preprocessing (request)    --postprocess=PO..  Use given script(s) for postprocessing (response)    --repair            Redump entries having unknown character marker (?)    --save=SAVECONFIG   Save options to a configuration INI file    --scope=SCOPE       Regexp to filter targets from provided proxy log    --test-filter=TE..  Select tests by payloads and/or titles (e.g. ROW)    --test-skip=TEST..  Skip tests by payloads and/or titles (e.g. BENCHMARK)    --update            Update sqlmap  Miscellaneous:    -z MNEMONICS        Use short mnemonics (e.g. &quot;flu,bat,ban,tec=EU&quot;)    --alert=ALERT       Run host OS command(s) when SQL injection is found    --beep              Beep on question and/or when SQL injection is found    --cleanup           Clean up the DBMS from sqlmap specific UDF and tables    --dependencies      Check for missing (optional) sqlmap dependencies    --disable-coloring  Disable console output coloring    --gpage=GOOGLEPAGE  Use Google dork results from specified page number    --identify-waf      Make a thorough testing for a WAF/IPS protection    --list-tampers      Display list of available tamper scripts    --mobile            Imitate smartphone through HTTP User-Agent header    --offline           Work in offline mode (only use session data)    --purge             Safely remove all content from sqlmap data directory    --skip-waf          Skip heuristic detection of WAF/IPS protection    --smart             Conduct thorough tests only if positive heuristic(s)    --sqlmap-shell      Prompt for an interactive sqlmap shell    --tmp-dir=TMPDIR    Local directory for storing temporary files    --web-root=WEBROOT  Web server document root directory (e.g. &quot;/var/www&quot;)    --wizard            Simple wizard interface for beginner users</code></pre><h2 id="0x02-常用命令"><a href="#0x02-常用命令" class="headerlink" title="0x02 常用命令"></a>0x02 常用命令</h2><table><thead><tr><th align="left"></th><th align="left"></th></tr></thead><tbody><tr><td align="left">检查注入点</td><td align="left">sqlmap -u “<a href="http://ooxx.com/a.php?id=1&quot;">http://ooxx.com/a.php?id=1&quot;</a></td></tr><tr><td align="left">列数据库信息</td><td align="left">sqlmap -u “<a href="http://ooxx.com/a.php?id=1&quot;">http://ooxx.com/a.php?id=1&quot;</a> –dbs</td></tr><tr><td align="left">指定数据库名列出所有表</td><td align="left">sqlmap -u “<a href="http://ooxx.com/a.php?id=1&quot;">http://ooxx.com/a.php?id=1&quot;</a> -D dbsname –tables</td></tr><tr><td align="left">指定数据库名表名列出所有字段</td><td align="left">sqlmap -u “<a href="http://ooxx.com/a.php?id=1&quot;">http://ooxx.com/a.php?id=1&quot;</a> -D dbsname -T tablename –columns</td></tr><tr><td align="left">定数据库名表名字段dump出指定字段</td><td align="left">sqlmap -u “<a href="http://ooxx.com/a.php?id=1&quot;">http://ooxx.com/a.php?id=1&quot;</a> -D dbsname -T tablename -C columnname –dump</td></tr><tr><td align="left">cookie 注入</td><td align="left">–cookie=COOKIE 在需要登录的地方，需要登录后的cookie</td></tr><tr><td align="left">执行指定的 SQL 语句</td><td align="left">–sql-query=QUERY</td></tr><tr><td align="left">代理注入</td><td align="left">–proxy=”<a href="http://127.0.0.1:8087&quot;">http://127.0.0.1:8087&quot;</a></td></tr></tbody></table><h2 id="0x03-实例使用"><a href="#0x03-实例使用" class="headerlink" title="0x03 实例使用"></a>0x03 实例使用</h2><details><summary>Demo 001</summary>靶机网址：<pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>rimovni.exeye.run<span class="hljs-regexp">/hugkudure/</span>well</code></pre>使用命令：<pre><code class="hljs routeros">python sqlmap.py -u <span class="hljs-string">&quot;https://rimovni.exeye.run/hugkudure/well&quot;</span> <span class="hljs-attribute">--method</span>=POST <span class="hljs-attribute">--data</span>=<span class="hljs-string">&quot;name=1&quot;</span>python sqlmap.py -u <span class="hljs-string">&quot;https://rimovni.exeye.run/hugkudure/well&quot;</span> <span class="hljs-attribute">--method</span>=POST <span class="hljs-attribute">--data</span>=<span class="hljs-string">&quot;name=1&quot;</span> -D twosecu1_vuln_06 -T flag -C flag --dump</code></pre></details>]]></content>
    
    
    <categories>
      
      <category>Tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SqlMap</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker</title>
    <link href="/2020/09/25/006-Docker/"/>
    <url>/2020/09/25/006-Docker/</url>
    
    <content type="html"><![CDATA[<p>｜相关文档｜常用命令｜</p><a id="more"></a><h2 id="0x01-Docker相关文档"><a href="#0x01-Docker相关文档" class="headerlink" title="0x01 Docker相关文档"></a>0x01 Docker相关文档</h2><p><a href="https://www.docker.com/">https://www.docker.com/</a><br><a href="https://docs.docker.com/docker-for-mac/">https://docs.docker.com/docker-for-mac/</a><br><a href="https://hub.docker.com/editions/community/docker-ce-desktop-mac/">https://hub.docker.com/editions/community/docker-ce-desktop-mac/</a><br><a href="https://www.docker.org.cn/book/docker/what-is-docker-16.html">https://www.docker.org.cn/book/docker/what-is-docker-16.html</a> [中文教程]</p><h2 id="0x02-Docker常用命令"><a href="#0x02-Docker常用命令" class="headerlink" title="0x02 Docker常用命令"></a>0x02 Docker常用命令</h2><pre><code class="hljs bash">docker run －t －i &lt;image&gt;    //用镜像创建一个容器docker pull image     //拉拽镜像docker images     //查看可用镜像docker ps     //查看运行的容器docker ps -a     //查看所有的容器docker stop &lt;container id&gt;     //停止该容器docker start &lt;container id&gt;     //开始该容器docker attach &lt;container id&gt;    //与该容器交互docker commit &lt;container id&gt; &lt;new id&gt;    //创建新的镜像docker rm &lt;container id&gt;    //删除容器docker rmi &lt;image name&gt;    //删除镜像docker cp &lt;containerId&gt;:/file/path/within/container /host/path/target     //从Docker容器内拷贝文件到主机上</code></pre>]]></content>
    
    
    <categories>
      
      <category>Tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Pythonの虚拟环境</title>
    <link href="/2020/09/21/005-Python-VirtualEnv/"/>
    <url>/2020/09/21/005-Python-VirtualEnv/</url>
    
    <content type="html"><![CDATA[<p>｜virtualenvwrapper｜anaconda3｜</p><a id="more"></a><h2 id="0x01-使用Virtualenvwrapper配置虚拟环境"><a href="#0x01-使用Virtualenvwrapper配置虚拟环境" class="headerlink" title="0x01 使用Virtualenvwrapper配置虚拟环境"></a>0x01 使用Virtualenvwrapper配置虚拟环境</h2><p>参考文档：<a href="https://virtualenvwrapper.readthedocs.io/en/latest/">https://virtualenvwrapper.readthedocs.io/en/latest/</a><br>常用命令：</p><pre><code class="hljs python">pip install virtualenvwrapperpip install virtualenvwrapper -i https://pypi.tuna.tsinghua.edu.cn/simple/ --trusted-host pypi.tuna.tsinghua.edu.cnexport WORKON_HOME=~/Envsmkdir -p $WORKON_HOMEsource /usr/local/bin/virtualenvwrapper.shmkvirtualenv env1ls $WORKON_HOMEecho $VIRTUAL_ENVworkon env1workon env2</code></pre><h2 id="0x02-使用Anaconda3配置虚拟环境"><a href="#0x02-使用Anaconda3配置虚拟环境" class="headerlink" title="0x02 使用Anaconda3配置虚拟环境"></a>0x02 使用Anaconda3配置虚拟环境</h2><p>下载Anaconda3：<a href="https://www.anaconda.com/">https://www.anaconda.com/</a><br>常用命令：</p><pre><code class="hljs python">conda create -n $env_name python=X.Xconda activate $env_namedeactivate $env_nameconda remove -n $your_env_name --allconda remove --name $your_env_name  $package_namepip install $package_name</code></pre>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python Virtual Environment</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>资讯&amp;论坛&amp;博文集</title>
    <link href="/2020/09/16/004-fantastic-blogs/"/>
    <url>/2020/09/16/004-fantastic-blogs/</url>
    
    <content type="html"><![CDATA[<p>｜安全资讯类｜安全学习论坛｜知识库｜经验分享类｜安全知识类｜工具分享类｜CTF-Web解答｜杂项</p><a id="more"></a><h2 id="0x01-安全资讯类"><a href="#0x01-安全资讯类" class="headerlink" title="0x01 安全资讯类"></a>0x01 安全资讯类</h2><ul><li>SecWiki | <a href="https://www.sec-wiki.com/index.php">https://www.sec-wiki.com/index.php</a></li><li>FreeBuf | <a href="https://www.freebuf.com/">https://www.freebuf.com/</a></li><li>安全客 | <a href="https://www.anquanke.com/">https://www.anquanke.com/</a></li><li>Sec-News | <a href="https://wiki.ioin.in/">https://wiki.ioin.in/</a></li><li>SecurityTrails | <a href="https://securitytrails.com/blog">https://securitytrails.com/blog</a></li></ul><h2 id="0x02-安全学习论坛"><a href="#0x02-安全学习论坛" class="headerlink" title="0x02 安全学习论坛"></a>0x02 安全学习论坛</h2><ul><li>吾爱破解 | <a href="https://www.52pojie.cn/forum.php">https://www.52pojie.cn/forum.php</a></li><li>看雪论坛 | <a href="https://bbs.pediy.com/">https://bbs.pediy.com/</a></li></ul><h2 id="0x03-知识库"><a href="#0x03-知识库" class="headerlink" title="0x03 知识库"></a>0x03 知识库</h2><ul><li>看雪知识库 | <a href="https://www.kanxue.com/chm.htm">https://www.kanxue.com/chm.htm</a></li><li>CTF Wiki | <a href="https://ctf-wiki.github.io/ctf-wiki/">https://ctf-wiki.github.io/ctf-wiki/</a></li><li>CTF-Tools Wiki | <a href="https://ctf-wiki.github.io/ctf-tools/">https://ctf-wiki.github.io/ctf-tools/</a></li></ul><h2 id="0x04-经验分享类"><a href="#0x04-经验分享类" class="headerlink" title="0x04 经验分享类"></a>0x04 经验分享类</h2><ul><li>如何评价自己的安全工作 | <a href="https://zhuanlan.zhihu.com/p/226493047">https://zhuanlan.zhihu.com/p/226493047</a></li><li>Reasons Why Every Business Needs a Routine Vulnerability Assessment | <a href="https://www.indusface.com/blog/">https://www.indusface.com/blog/</a></li></ul><h2 id="0x05-安全知识类"><a href="#0x05-安全知识类" class="headerlink" title="0x05 安全知识类"></a>0x05 安全知识类</h2><ul><li>巧遇蜜罐，冷静对待 ｜ <a href="https://mp.weixin.qq.com/s/YBge1xjpjQjQ-NoK4kK6RQ">https://mp.weixin.qq.com/s/YBge1xjpjQjQ-NoK4kK6RQ</a></li><li>渗透中 PoC、Exp、Payload 与 Shellcode 的区别 | <a href="https://howiezhao.github.io/2018/04/29/payload-shellcode-exp-poc/">https://howiezhao.github.io/2018/04/29/payload-shellcode-exp-poc/</a></li><li>SQL Injection Payload List | <a href="https://medium.com/@ismailtasdelen/sql-injection-payload-list-b97656cfd66b">https://medium.com/@ismailtasdelen/sql-injection-payload-list-b97656cfd66b</a></li></ul><h2 id="0x06-工具分享类"><a href="#0x06-工具分享类" class="headerlink" title="0x06 工具分享类"></a>0x06 工具分享类</h2><h3 id="未分类"><a href="#未分类" class="headerlink" title="未分类"></a>未分类</h3><ul><li>Top 25 OSINT Tools for Penetration Testing | <a href="https://securitytrails.com/blog/osint-tools">https://securitytrails.com/blog/osint-tools</a></li><li>Exploring Google Hacking Techniques | <a href="https://securitytrails.com/blog/google-hacking-techniques">https://securitytrails.com/blog/google-hacking-techniques</a></li><li>Finder的实用技巧 | <a href="https://sspai.com/post/27403">https://sspai.com/post/27403</a></li><li>How To Use Proxychains Kali Linux | <a href="https://online-it.nu/how-to-use-proxychains-kali-linux/?print=print">https://online-it.nu/how-to-use-proxychains-kali-linux/?print=print</a></li></ul><h3 id="Social-Engineering"><a href="#Social-Engineering" class="headerlink" title="Social Engineering"></a>Social Engineering</h3><ul><li>红队攻击：轻松玩转邮件钓鱼 | <a href="https://www.jianshu.com/p/8f5c5ef25db9">https://www.jianshu.com/p/8f5c5ef25db9</a></li><li>社会工程学工具集Social-Engineer Toolkit基础使用教程 | <a href="https://www.freebuf.com/sectool/73409.html">https://www.freebuf.com/sectool/73409.html</a></li><li>社会工程学工具包：Social-Engineer Toolkit（SET）| <a href="https://www.uedbox.com/post/57761/">https://www.uedbox.com/post/57761/</a></li></ul><h3 id="Docker相关"><a href="#Docker相关" class="headerlink" title="Docker相关"></a>Docker相关</h3><ul><li>Docker Desktop on Mac vs. Docker Toolbox | <a href="https://docs.docker.com/docker-for-mac/docker-toolbox/">https://docs.docker.com/docker-for-mac/docker-toolbox/</a></li><li>macOS上使用kali-linux for docker | <a href="http://www.gandalf.site/2018/12/macoskali-linux-for-docker.html">http://www.gandalf.site/2018/12/macoskali-linux-for-docker.html</a></li></ul><h2 id="0x07-CTF-Web解答"><a href="#0x07-CTF-Web解答" class="headerlink" title="0x07 CTF-Web解答"></a>0x07 CTF-Web解答</h2><ul><li>HCTF 2018 WriteUp | <a href="https://impakho.com/post/hctf-2018-writeup#toc-7">https://impakho.com/post/hctf-2018-writeup#toc-7</a></li><li>BUUCTF[强网杯 2019]随便注的三种解法 | <a href="https://blog.csdn.net/qq_44657899/article/details/103239145">https://blog.csdn.net/qq_44657899/article/details/103239145</a></li></ul><h2 id="0x08-杂项"><a href="#0x08-杂项" class="headerlink" title="0x08 杂项"></a>0x08 杂项</h2><ul><li>Markdown中的代码块 | <a href="https://gohom.win/2015/07/10/fench-code-markdown/">https://gohom.win/2015/07/10/fench-code-markdown/</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Index</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Collections</tag>
      
      <tag>Blogs</tag>
      
      <tag>Websites</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PTES 渗透测试执行标准</title>
    <link href="/2020/09/16/003-PTES/"/>
    <url>/2020/09/16/003-PTES/</url>
    
    <content type="html"><![CDATA[<p>【参考文档】<a href="http://www.pentest-standard.org/index.php/Main_Page">http://www.pentest-standard.org/index.php/Main_Page</a></p><a id="more"></a><h2 id="Main-Page-主页"><a href="#Main-Page-主页" class="headerlink" title="Main Page | 主页"></a>Main Page | 主页</h2><iframe src="http://www.pentest-standard.org/index.php/Main_Page" width="100%" height="500" name="PTES Main_Page" scrolling="yes"  noresize="noresize" frameborder="0" id="ptesMainPage"></iframe><hr><p>渗透测试执行标准由七个主要部分组成。这些内容涵盖了与渗透测试相关的所有内容-从最初的沟通和渗透测试到推理，再到情报收集和威胁建模阶段，测试人员都在幕后进行工作，以便通过漏洞研究更好地了解被测组织，开发和后期开发，在此过程中，测试人员的技术安全专业知识将发挥作用，并与业务参与的业务理解相结合，最后是报告，该报告以对客户有意义的方式捕获了整个过程，并赋予其价值。</p><p><strong>渗透测试执行的步骤：</strong></p><ul><li>前期交互</li><li>信息收集</li><li>威胁建模</li><li>漏洞分析</li><li>渗透攻击</li><li>后渗透攻击</li><li>报告</li></ul>]]></content>
    
    
    <categories>
      
      <category>Framework</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Study</tag>
      
      <tag>Standard</tag>
      
      <tag>Methodology</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>渗透术语集</title>
    <link href="/2020/09/16/002-terms-index/"/>
    <url>/2020/09/16/002-terms-index/</url>
    
    <content type="html"><![CDATA[<h3 id="慢慢总结一些常见的术语"><a href="#慢慢总结一些常见的术语" class="headerlink" title="慢慢总结一些常见的术语"></a>慢慢总结一些常见的术语</h3><a id="more"></a><ul><li>Penetration Testing | 渗透测试</li><li>Exploit | 渗透攻击</li><li>Listener</li><li>ATT&amp;CK | Adversarial Tatics, Techniques and Common Knowledge</li><li>White-box Testing</li><li>Black-box Testing</li><li>Gray-box Testing</li><li>PTES | Penetration Testing Execution Standard</li><li>RISC | Reduced Instruction Set Computer</li><li>CISC | Complex Instruction Set Computer</li><li>Fuzz Testing | 模糊测试</li><li>PoC | Proof of Concept | 概念验证</li><li>Exp | Exploit | 利用</li><li>Payload | 有效载荷</li><li>Shellcode | Payload的一种</li><li>IPS | Intrusion Prevention System</li><li>IDS | Intrusion Detection System</li><li>OSCP | Offensive Security Certified Professional</li><li>WAF | Web Application Firewall</li></ul>]]></content>
    
    
    <categories>
      
      <category>Index</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Terminology</tag>
      
      <tag>Collections</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>常用工具集(含网址)</title>
    <link href="/2020/09/11/001-tools-index/"/>
    <url>/2020/09/11/001-tools-index/</url>
    
    <content type="html"><![CDATA[<p>｜经典工具｜信息收集｜社工工具｜Web相关｜漏洞情报｜在线工具｜扫描工具｜爬虫工具｜</p><a id="more"></a><h2 id="0x01-经典工具"><a href="#0x01-经典工具" class="headerlink" title="0x01 经典工具"></a>0x01 经典工具</h2><ul><li><a href="/2020/09/25/006-Docker">Docker</a> | <a href="https://docs.docker.com/">https://docs.docker.com/</a> | <a href="https://www.docker.org.cn/book/docker/">https://www.docker.org.cn/book/docker/</a> [中文教程]</li><li>Burp Suite | <a href="https://portswigger.net/">https://portswigger.net/</a> | <a href="https://portswigger.net/web-security">https://portswigger.net/web-security</a></li><li>OSINT | <a href="https://osintframework.com/">https://osintframework.com/</a> | <a href="https://github.com/lockfale/osint-framework">https://github.com/lockfale/osint-framework</a></li><li><a href="/2020/09/26/007-sqlmap">Sqlmap</a> | <a href="http://sqlmap.org/">http://sqlmap.org/</a> | <a href="https://github.com/sqlmapproject/sqlmap">https://github.com/sqlmapproject/sqlmap</a></li><li>Nmap | <a href="https://nmap.org/">https://nmap.org/</a> | <a href="https://nmap.org/book/man.html">https://nmap.org/book/man.html</a></li><li>Wireshark | <a href="https://www.wireshark.org/">https://www.wireshark.org/</a> | <a href="https://www.wireshark.org/docs/wsug_html_chunked/">https://www.wireshark.org/docs/wsug_html_chunked/</a></li><li><a href="/2020/10/10/010-proxychains/">Proxychains</a> | <a href="https://github.com/rofl0r/proxychains-ng">https://github.com/rofl0r/proxychains-ng</a></li></ul><h2 id="0x02-信息收集"><a href="#0x02-信息收集" class="headerlink" title="0x02 信息收集"></a>0x02 信息收集</h2><ul><li>SET (Social-Engineer Toolkit) | <a href="https://github.com/trustedsec/social-engineer-toolkit/">https://github.com/trustedsec/social-engineer-toolkit/</a></li><li>GoPhish | <a href="https://github.com/gophish/gophish/">https://github.com/gophish/gophish/</a></li><li>Shodan | 网络空间搜索引擎 | <a href="https://www.shodan.io/">https://www.shodan.io/</a></li><li>GoBy | 资产扫描工具 | <a href="https://cn.gobies.org/">https://cn.gobies.org/</a></li><li>WhatWeb | 网站指纹识别 | <a href="https://github.com/urbanadventurer/WhatWeb">https://github.com/urbanadventurer/WhatWeb</a></li><li>ChinaZ | 站长之家 | <a href="http://tool.chinaz.com/">http://tool.chinaz.com/</a></li><li>ICP | ICP备案查询 | <a href="https://beian.miit.gov.cn/#/Integrated/index">https://beian.miit.gov.cn/#/Integrated/index</a></li><li>Sublist3r | 子域名发现工具 | <a href="https://github.com/aboul3la/Sublist3r">https://github.com/aboul3la/Sublist3r</a></li><li>Dircrack | 目录扫描工具 | <a href="https://github.com/clowndmn/DirCrack">https://github.com/clowndmn/DirCrack</a></li></ul><h2 id="0x03-社工工具"><a href="#0x03-社工工具" class="headerlink" title="0x03 社工工具"></a>0x03 社工工具</h2><ul><li>SET(Social Engineer Toolkit) | <a href="https://github.com/trustedsec/social-engineer-toolkit">https://github.com/trustedsec/social-engineer-toolkit</a></li><li>Gophish | <a href="https://github.com/gophish/gophish">https://github.com/gophish/gophish</a></li><li>CUPP(Common User Password Profile) | <a href="https://github.com/Mebus/cupp">https://github.com/Mebus/cupp</a></li></ul><h3 id="字典相关"><a href="#字典相关" class="headerlink" title="字典相关"></a>字典相关</h3><ul><li>SecLists | <a href="https://github.com/danielmiessler/SecLists">https://github.com/danielmiessler/SecLists</a></li></ul><h2 id="0x04-Web相关"><a href="#0x04-Web相关" class="headerlink" title="0x04 Web相关"></a>0x04 Web相关</h2><ul><li>Dirsearch | <a href="https://github.com/maurosoria/dirsearch">https://github.com/maurosoria/dirsearch</a></li><li>JSFinder | <a href="https://github.com/Threezh1/JSFinder">https://github.com/Threezh1/JSFinder</a></li><li>GitHack | <a href="https://github.com/lijiejie/GitHack">https://github.com/lijiejie/GitHack</a></li><li>Beef | <a href="https://github.com/beefproject/beef">https://github.com/beefproject/beef</a></li></ul><h2 id="0x05-漏洞情报"><a href="#0x05-漏洞情报" class="headerlink" title="0x05 漏洞情报"></a>0x05 漏洞情报</h2><ul><li>CNVD (China National Vulnerability Database) | <a href="https://www.cnvd.org.cn/">https://www.cnvd.org.cn/</a></li><li>CNNVD (China National Vulnerability Database of Information Security) | <a href="http://www.cnnvd.org.cn/">http://www.cnnvd.org.cn/</a></li><li>CVE Details | <a href="https://www.cvedetails.com/">https://www.cvedetails.com/</a></li><li>NVD (National Vulnerability Database) | <a href="https://nvd.nist.gov/">https://nvd.nist.gov/</a></li><li>SecurityFocus | <a href="https://www.securityfocus.com/">https://www.securityfocus.com/</a></li><li>Exploit-db | <a href="https://www.exploit-db.com/">https://www.exploit-db.com/</a></li><li>ExploitS-shodan | <a href="https://exploits.shodan.io/welcome">https://exploits.shodan.io/welcome</a></li><li>Searchsploit | <a href="https://www.exploit-db.com/searchsploit">https://www.exploit-db.com/searchsploit</a></li></ul><h2 id="0x06-在线工具"><a href="#0x06-在线工具" class="headerlink" title="0x06 在线工具"></a>0x06 在线工具</h2><ul><li>在线工具 | <a href="https://tool.lu/">https://tool.lu/</a></li><li>C在线工具 | <a href="https://tool.oschina.net/">https://tool.oschina.net/</a></li><li>站长工具 | <a href="http://tool.chinaz.com/">http://tool.chinaz.com/</a></li><li>CTF在线工具 | <a href="https://tool.bugku.com/">https://tool.bugku.com/</a></li></ul><h2 id="0x07-在线API文档"><a href="#0x07-在线API文档" class="headerlink" title="0x07 在线API文档"></a>0x07 在线API文档</h2><ul><li>C在线工具 | <a href="https://tool.oschina.net/apidocs/">https://tool.oschina.net/apidocs/</a></li></ul><h2 id="0x08-扫描工具"><a href="#0x08-扫描工具" class="headerlink" title="0x08 扫描工具"></a>0x08 扫描工具</h2><ul><li>BBScan | 高并发漏洞扫描工具 | <a href="https://github.com/lijiejie/BBScan">https://github.com/lijiejie/BBScan</a></li><li>Xray | 综合Web漏洞扫描器 | <a href="https://github.com/chaitin/xray/">https://github.com/chaitin/xray/</a> | 社区版免费</li></ul><h2 id="0x09-爬虫工具"><a href="#0x09-爬虫工具" class="headerlink" title="0x09 爬虫工具"></a>0x09 爬虫工具</h2><ul><li>CrawlerGo | 动态网络爬虫工具 | <a href="https://github.com/0Kee-Team/crawlergo/">https://github.com/0Kee-Team/crawlergo/</a></li></ul><hr><p><img src="/img/blog_imgs/001-tools-index/inner-img001.png" width="100%"></img></p>]]></content>
    
    
    <categories>
      
      <category>Index</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Collections</tag>
      
      <tag>Tools</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/09/10/hello-world/"/>
    <url>/2020/09/10/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
